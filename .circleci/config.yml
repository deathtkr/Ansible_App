version: 2.1

executors:
  docker-executor:
    docker:
      - image: circleci/python:3.9

jobs:
  check-code-changes:
    executor: docker-executor
    steps:
      - checkout
      - run:
          name: Check if application code has changed
          command: |
            # Check if there are changes in the `src/` directory
            if git diff --quiet HEAD^ HEAD src/; then
              echo "NO_CHANGES=true" >> pipeline_vars.txt
            else
              echo "NO_CHANGES=false" >> pipeline_vars.txt
            fi
      - persist_to_workspace:
          root: .
          paths:
            - pipeline_vars.txt

  build-and-push:
    executor: docker-executor
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Clean Git Files Only
          command: |
            # Remove .git directory but keep other files
            rm -rf .git
      - run:
          name: Re-initialize Git Repository
          command: |
            git init
            git remote add origin git@github.com:deathtkr/Ansible_App.git
      - checkout  # Re-clone the repository to bring back the Git structuref
      - run:
          name: Load pipeline state
          command: |
            source pipeline_vars.txt
            if [ "$NO_CHANGES" = "true" ]; then
              echo "No changes in the application code. Skipping build."
              circleci-agent step halt
            else
              echo "Changes detected in the application code. Proceeding with the build."
            fi
      - setup_remote_docker:
          version: default
          docker_layer_caching: true
      - run:
          name: Install Azure CLI
          command: |
            curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
      - run:
          name: Login to Azure
          command: |
            echo $AZURE_CREDENTIALS | az login --service-principal --username $AZURE_CLIENT_ID --password $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID
      - run:
          name: Log in to Azure Container Registry
          command: |
            az acr login --name argocd01
      - run:
          name: Build Docker Image
          command: |
            docker build -t myapp:${CIRCLE_SHA1} .
      - run:
          name: Push Docker Image to ACR
          command: |
            docker tag myapp:${CIRCLE_SHA1} argocd01.azurecr.io/myapp:${CIRCLE_SHA1}
            docker push argocd01.azurecr.io/myapp:${CIRCLE_SHA1}

  update-manifests:
    executor: docker-executor
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Clean Git Files Only
          command: |
            # Remove .git directory but keep other files
            rm -rf .git
      - run:
          name: Re-initialize Git Repository
          command: |
            git init
            git remote add origin git@github.com:deathtkr/Ansible_App.git
      - checkout
      - run:
          name: Load pipeline state
          command: |
            source pipeline_vars.txt
            if [ "$NO_CHANGES" = "true" ]; then
              echo "No changes in the application code. Skipping manifest update."
              circleci-agent step halt
            fi
      - run:
          name: Update Kubernetes Manifests
          command: |
            sed -i "s|image: argocd01.azurecr.io/myapp:.*|image: argocd01.azurecr.io/myapp:${CIRCLE_SHA1}|" k8s/deployment.yaml
      - run:
          name: Commit and Push Changes
          command: |
            git config --global user.email "ci@circleci.com"
            git config --global user.name "CircleCI"
            git add k8s/deployment.yaml
            git commit -m "Update image to ${CIRCLE_SHA1} [skip ci]" || echo "No changes to commit"
            git push git@github.com:deathtkr/Ansible_App.git

workflows:
  version: 2
  build-deploy:
    jobs:
      - check-code-changes
      - build-and-push:
          requires:
            - check-code-changes
      - update-manifests:
          requires:
            - build-and-push
